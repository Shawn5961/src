#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <gd.h>
#include <gdfontl.h>
#include <time.h>

#define BLACK       0
#define GRAY        1
#define VIOLET      2
#define INDIGO      3
#define BLUE        4
#define GREEN       5
#define YELLOW      6
#define ORANGE      7
#define RED         8
#define WHITE       9
#define DARKGREEN   10
#define BROWN		11

double randDouble(double max)
{
	double randdouble = (((double)rand()/(double)RAND_MAX) + 1) * (max);

	return randdouble;
}

int main(int argc, char* argv[])
{
	FILE *out;
	char outfile[] = "/var/www/image.png";
	gdImagePtr img;
	unsigned int color[11];
	unsigned short int wide, high, x;
	int i, j;
	double randNum, randNum2, randNum3;

	wide = atoi(argv[1]);
	high = atoi(argv[2]);

	srand(time(NULL));

	img = gdImageCreate(wide, high);

	//My GD color definitions
	color[BLACK]            = gdImageColorAllocate(img, 0x00, 0x00, 0x00);
	color[BLUE]             = gdImageColorAllocate(img, 0x00, 0x00, 0xFF);
	color[GREEN]            = gdImageColorAllocate(img, 0x00, 0xFF, 0x00);
	color[DARKGREEN]        = gdImageColorAllocate(img, 0x33, 0x6B, 0x00);
	color[RED]              = gdImageColorAllocate(img, 0xFF, 0x00, 0x00);
	color[GRAY]             = gdImageColorAllocate(img, 0xCC, 0xCC, 0xCC);
	color[WHITE]            = gdImageColorAllocate(img, 0xFF, 0xFF, 0xFF);
	color[BROWN]			= gdImageColorAllocate(img, 0x71, 0x28, 0x00);

	gdImageFilledRectangle(img, 0, 0, wide, high, color[WHITE]);

	gdImageLine(img,      0,      0, wide-1,      0, color[RED]);
	gdImageLine(img, wide-1,      0, wide-1, high-1, color[RED]);
	gdImageLine(img, wide-1, high-1,      0, high-1, color[RED]);
	gdImageLine(img,      0, high-1,      0,      0, color[RED]);

	gdImageFilledRectangle(img, (wide/2)-25, 100, (wide/2)+25, high, color[BROWN]);

	for(i = 1; i < 5; i++)
	{
		gdImageFilledRectangle(img, (wide/4), ((high/5)*i), (wide/2)-25, ((high/5)*i)-5, color[BROWN]);

		randNum3 = rand() % 20 + 1;
		for(j = 1; j < randNum3; j++)
		{
			randNum = randDouble(wide/40);
			randNum2 = randDouble(wide/200);
			gdImageFilledArc(img, (wide/4)+(randNum*(j/(randNum3/5))), ((high/5)*i)-(randNum2*2), randNum2*5, randNum2*5, 0, 360, color[GREEN], gdArc);
		}

		randNum3 = rand() % 20 + 1;
		for(j = 1; j < randNum3; j++)
		{
			randNum = randDouble(wide/40);
			randNum2 = randDouble(wide/200);
			gdImageFilledArc(img, (wide/4)+(randNum*(j/(randNum3/5))), ((high/5)*i)+(randNum2*2), randNum2*5, randNum2*5, 0, 360, color[GREEN], gdArc);
		}

		randNum = randDouble(wide/100);
		gdImageFilledArc(img, (wide/4), ((high/5)*i)-3, randNum*5, randNum*5, 0, 360, color[GREEN], gdArc);
	}

	for(i = 1; i < 6; i++)
	{
		gdImageFilledRectangle(img, (wide/2)+25, ((high/6.1)*i)+25, wide-(wide/4), ((high/6.1)*i)-5+25, color[BROWN]);

		randNum3 = rand() % 20 + 1;
		for(j = randNum3; j > 1; j--)
		{
			randNum = randDouble(wide/40);
			randNum2 = randDouble(wide/200);
			gdImageFilledArc(img, (wide/2)+(wide/40)+(randNum*(j/(randNum3/5))), ((high/6.1)*i)+(randNum2+2), randNum2*5, randNum2*5, 0, 360, color[GREEN], gdArc);
		}

		randNum3 = rand() % 20 + 1;
		for(j = randNum3; j > 1; j--)
		{
			randNum = randDouble(wide/40);
			randNum2 = randDouble(wide/200);
			gdImageFilledArc(img, (wide/2)+(wide/40)+(randNum*(j/(randNum3/5))), ((high/6.1)*i)+(randNum2+25), randNum2*5, randNum2*5, 0, 360, color[GREEN], gdArc);
		}

		randNum = randDouble(wide/100);
		gdImageFilledArc(img, wide-(wide/4), ((high/6.1)*i)+22, randNum*5, randNum*5, 0, 360, color[GREEN], gdArc);
	}

	for(i = 1; i < 6; i++)
	{
		randNum = randDouble(wide/40);
		randNum2 = randDouble(high/40);
		randNum3 = randDouble(high/100);
		gdImageFilledArc(img, (wide/2), ((high/randNum3)*i), randNum*5, randNum2*5, 0, 360, color[GREEN], gdArc);
	}

	out = fopen(outfile, "wb");
	gdImagePngEx(img, out, -1);

	// Close things up
	//
	fclose(out);
	gdImageDestroy(img);

	return(0);
}
